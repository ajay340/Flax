
func fib(n) {
  if n < 2 {
    return n;
  }   
  return fib(n - 1) + fib(n - 2); 
}


func fibTwo(n) {

  if n == 0 {
    return 0;
  }

  if n == 1 {
    return 1;
  }

  let ans = 1;
  let cur = 2;
  let nMinOne = 1;
  let nMinTwo = 0;
  while cur <= n {
    ans = (nMinOne + nMinTwo);
    let temp = nMinOne;
    nMinOne = (nMinOne + nMinTwo);
    nMinTwo = temp;
    cur += 1;
  }
  return ans;
}



//let before = clock();
//println(fib(40));
//let after = clock();
//println("Time recursive: " ++ (after - before) ++ "s");

let before = clock();
println(fibTwo(40));
let after = clock();
println("Time while: " ++ (after - before) ++ "s");

